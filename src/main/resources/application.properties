quarkus.http.port=8003
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, DELETE, PATCH
quarkus.rest.path = /api/reservation-service

# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.jdbc.url= jdbc:postgresql://${POSTGRESQL_HOST:localhost}:${POSTGRESQL_PORT:5432}/${POSTGRESQL_DB:reservationdb}
quarkus.datasource.username=${POSTGRES_USER}
quarkus.datasource.password=${POSTGRES_PASSWORD}

quarkus.native.resources.includes=import.sql

# By default, use the clean (data) slate approach
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation.create-schemas=true

#%prod.quarkus.hibernate-orm.sql-load-script=${INIT_DATA_SCRIPT:no-file}
#%prod.quarkus.hibernate-orm.database.generation=${CREATE_DB_OPTION:none}
#%prod.quarkus.hibernate-orm.database.generation.create-schemas=${INIT_DATA_BOOL:false}


#test
%test.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] %m%n
%test.quarkus.log.level=DEBUG

#build
quarkus.package.type=fast-jar

integration.user-service-api = ${USER_SERVICE_API:http://localhost:8001/api/user-service}
integration.accommodation-service-api = ${ACCOMMODATION_SERVICE_API:http://localhost:8002/api/accommodation-service}
integration.notification-service-api = ${NOTIFICATION_SERVICE_API:http://localhost:8004/api/notification-service}